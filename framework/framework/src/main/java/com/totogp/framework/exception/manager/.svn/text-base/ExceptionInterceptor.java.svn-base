package fr.vdm.soclejee.exception.manager;

import java.io.Serializable;

import javax.interceptor.AroundInvoke;
import javax.interceptor.Interceptor;
import javax.interceptor.InvocationContext;

import fr.vdm.soclejee.exception.ExceptionManager;

@ExceptionManaged
@Interceptor
public class ExceptionInterceptor extends ExceptionManager  implements Serializable {
	/**
	 * 
	 */
  private static final long serialVersionUID = 6648914594769793514L;

	@AroundInvoke
	public Object aroundInvoke(final InvocationContext context) throws Exception {
		Object result = null;

		try {
			result = context.proceed();
		} catch (Exception e) {
			Exception wrappedException = manageException(context, e);

			if (wrappedException != null)
				throw wrappedException;
		}

		return result;
	}
}
